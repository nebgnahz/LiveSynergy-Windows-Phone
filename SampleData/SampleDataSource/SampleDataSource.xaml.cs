//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.SampleDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class SampleDataSource { }
#else

	public class SampleDataSource : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public SampleDataSource()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/LiveSynergy;component/SampleData/SampleDataSource/SampleDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private ItemCollection _Collection = new ItemCollection();

		public ItemCollection Collection
		{
			get
			{
				return this._Collection;
			}
		}
	}

	public class Item : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _DeviceName = string.Empty;

		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}

			set
			{
				if (this._DeviceName != value)
				{
					this._DeviceName = value;
					this.OnPropertyChanged("DeviceName");
				}
			}
		}

		private string _DeviceState = string.Empty;

		public string DeviceState
		{
			get
			{
				return this._DeviceState;
			}

			set
			{
				if (this._DeviceState != value)
				{
					this._DeviceState = value;
					this.OnPropertyChanged("DeviceState");
				}
			}
		}

		private string _DeviceEvent = string.Empty;

		public string DeviceEvent
		{
			get
			{
				return this._DeviceEvent;
			}

			set
			{
				if (this._DeviceEvent != value)
				{
					this._DeviceEvent = value;
					this.OnPropertyChanged("DeviceEvent");
				}
			}
		}

		private string _DeviceCommand = string.Empty;

		public string DeviceCommand
		{
			get
			{
				return this._DeviceCommand;
			}

			set
			{
				if (this._DeviceCommand != value)
				{
					this._DeviceCommand = value;
					this.OnPropertyChanged("DeviceCommand");
				}
			}
		}

		private string _DeviceChildren = string.Empty;

		public string DeviceChildren
		{
			get
			{
				return this._DeviceChildren;
			}

			set
			{
				if (this._DeviceChildren != value)
				{
					this._DeviceChildren = value;
					this.OnPropertyChanged("DeviceChildren");
				}
			}
		}

		private string _DeviceLocation = string.Empty;

		public string DeviceLocation
		{
			get
			{
				return this._DeviceLocation;
			}

			set
			{
				if (this._DeviceLocation != value)
				{
					this._DeviceLocation = value;
					this.OnPropertyChanged("DeviceLocation");
				}
			}
		}
	}

	public class ItemCollection : System.Collections.ObjectModel.ObservableCollection<Item>
	{ 
	}
#endif
}
